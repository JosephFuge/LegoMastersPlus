
@* eventually will get to this page with something like this: *@
@* <a class="rounded-pill btn btn-danger btn-pill" data-url="@Url.Action("DeleteProduct", "Admin", new { product_ID = tempProd.product_ID })" data-productid="@tempProd.product_ID">Delete Product</a> *@

@using LegoMastersPlus.Infrastructure
@model ProductDetailsViewModel

<div class="container container-fluid d-flex">
    <div class="row">
        <div class="col-7 align-items-stretch"><img src="@Model.RecProduct.img_link" class="img-fluid"/></div>
        <div class="col">
            <div class="row">
                <div class="card text-center">
                    <div class="card-body">@Model.RecProduct.name</div>
                </div>
            </div>
            <div class="row">
                <div class="card text-center">
                    <div class="card-body">
                        Categories: @(Model.RecProduct.ProductCategories.Any() ? string.Join(" - ", Model.RecProduct.ProductCategories.Select(pc => pc.Category.Name)) : "N/A")
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="card text-center">
                    <div class="card-body">Release Year: @Model.RecProduct.year</div>
                </div>
            </div>
            <div class="row">
                <div class="card text-center">
                    <div class="card-body">Number of Parts: @Model.RecProduct.num_parts</div>
                </div>
            </div>
            <div class="row">
                <div class="card text-center">
                    <div class="card-body">@Model.RecProduct.description</div>
                </div>
            </div>
            <div class="row">
                <div class="card fw-bold text-md-end">
                    <div class="card-body">
                        Price: $@Model.RecProduct.price
                        <form id="@Model.RecProduct.product_ID" method="post" asp-page="/Cart">
                            <input type="hidden" asp-for="product_ID" value="@Model.RecProduct.product_ID">
                            <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()"/>
                            <button type="submit" class="btn btn-outline-primary btn-sm float-end">Add to Cart</button>
                        </form>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <h3>If you like @Model.RecProduct.name, you might like:</h3>
</div>
<div class="row">
    @if (Model.Recommendation != null)
    {
        <vc:product-recommendation-card product="@Model.Recommendation.Product_1"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_2"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_3"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_4"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_5"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_6"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_7"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_8"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_9"></vc:product-recommendation-card>
        <vc:product-recommendation-card product="@Model.Recommendation.Product_10"></vc:product-recommendation-card>
    } else if (Model.StaticRecommendations != null)
    {
        @foreach (Product prod in Model.StaticRecommendations)
        {
            <vc:product-recommendation-card product="@prod"></vc:product-recommendation-card>
        }
    }

</div>